
# Git Commands

To Tell git who am i , What is my identity for that i am using the config command 
its having three stage i.e. --global, --local, --system

 -> git config --global user.name "Dipanshu Bisen"
 -> git config --global user.email "dipanshubisen15@gmail.com"

To Check the status of git it means you have to check the user name and email then use 

 -> git config --list

To Clone the remote Repo into local system use following command

 -> git clone "<Remote Repo HTTPS Path>"

To Check the Repo is there or not use 

 -> ls

Go to repo

 -> cd <repo name>

To Check how many File are there in that repo 

 -> ls -a  

To check the status use 

 -> git status

Now Create any file that folder and add something in that file, you will the status then you will see the "unstaged file" Like this it means the it is not in git staged state 
To Convert it to staged state use 

 -> git add <File name >

Now see the status you will see the Ready to commit (Commit mead make cimmitement)

 -> git commit -m "message for commit"

If you see the status now you will see the, its 1 commit bellow remote 
It means your changes in local system not in remote github
For that use 

 -> git push origin main



Initially in github there is already Repository is there so we just clone that repo into local system and make change , add it (staged it) , commit it and then push agin to github 

But now we are going to create the Repo in local System and then push that complete repo to the github

For that use the "git init" command

It will Initialize the git into the local repo and create the .git (hidden folder)

So To Create the Repo go to ~ this path create one folder which is Repo name 

 -> mkdir LocalRepo
 -> cd LocalRepo

Now it's normal folder to make the repository use command inside the folder 
 -> git init

Now create any folder/File whatever you want and then add it and commit it but whatever you did totally in local system 
To add it in github you have to create one repo in github then 

 -> git remote add origin "<repo link>"

To verify weather remote connection istablish or not , It will show the git repo link,use 

 -> git remote -v

To check the branch 
 
 -> git branch

By default here it is master bu in github its main so now you can use this also but already there is main so rename the branch name by 

 -> git branch -M main

and again use the command

 -> git push origin main 
 	or 
 -> git push -u orgin main 
It means now onwards if you want to push anything to github no need to use "origin main" again and again you can directly use "git push"
it means we are telling that we are going to use this branch only




Git Branches -------------> 

What is branches 
When two or more person work on same project and they want to make changes at same time then they are working with branches

To see the list of branches 
 
 -> git branch

To rename branch

 -> git branch -M <new branch name>

To create the new branch 

 -> git checkout -b <branch name>

To switch to another branch 

 -> git checkout <branch name>

To delete branch 

 -> git branch -d <branch name>




Git merge branches ----------------->

what is merge ?
when we make any changes to the new branch and want to add that changes in to the main branch then we are going to use the merge command


To compare the diff between the branches (You are in new branch)

 -> git diff <branch name(main)>
if its ++ then changes are in new branch not in main and if its -- then main branch having certain things that are not present in new branch

To merge branch 

 -> git merge <branch name>

Another way to merge branches 

PR(pull request)
 
 so you can merge it from github also there is tab showing merege pull request use that also


 
Git Pull Commands ------------->

to pull the data from github

 -> git pull origin main



Git Merge Conflicts------------>

If we make cahneges in same line with different branches then it will make one conflict that what changes you want to continue  



Git Undoing Changes-----------> 

if make certain mistake at that time we can resolve it by the some commands

If you add someting and you want to undo it 

 -> git reset <file name> (For one file )
 -> git reset (For all Files)

If you commit and you want to undo it one step back means back to previous commit 

 -> git reset HEAD~1

If you want to go back to multiple commits 

 -> git reset <commit hash code >
(Get it by "git log" command)



Git Fork ------>

it means we can create the rough copy of any public repository into aour account






