
# Install Ansible in Control Machine(Except Windows)

Intially Install Python then Ansible

 -> sudo apt update
 -> sudo apt install python3 -y
 -> python --version

Now Install Ansible

 -> sudo apt-get update
 -> sudo apt-get install software-properties-common
 -> sudo apt-add-repository ppa:ansible/ansible $ sudo apt-get update
 -> sudo apt-get install ansible

To Check The version of ansible use 

 -> ansible --version

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>

#Some Ansible Adhoc Commnads

Parallelism and Shell Commands
______________________________

Reboot your company server in 12 parallel forks at time. For this, we need to set up SSHagent for connection.
 -> ssh-agent bash 
 -> ssh-add ~/.ssh/id_rsa 

To run reboot for all your company servers in a group, 'abc', in 12 parallel forks âˆ’
 -> Ansible abc -a "/sbin/reboot" -f 12

By default, Ansible will run the above Ad-hoc commands form current user account. 
If you want to change this behavior, you will have to pass the username in Ad-hoc commands as follows
 -> Ansible abc -a "/sbin/reboot" -f 12 -u username

File Transfer
_____________

You can use the Ad-hoc commands for doing SCP (Secure Copy Protocol) lots of files in parallel on multiple machines.

Transferring file to many servers/machines
 -> Ansible abc -m copy -a "src = /etc/yum.conf dest = /tmp/yum.conf"

Creating new directory
 -> Ansible abc -m file -a "dest = /path/user1/new mode = 777 owner = user1 group = user1 state = directory"

Deleting whole directory and files
 -> Ansible abc -m file -a "dest = /path/user1/new state = absent"


Managing Packages
_________________

The Ad-hoc commands are available for yum and apt. Following are some Ad-hoc commands using yum.

The following command checks if yum package is installed or not, but does not update it.
 -> Ansible abc -m yum -a "name = demo-tomcat-1 state = present"

The following command check the package is not installed.
 -> Ansible abc -m yum -a "name = demo-tomcat-1 state = absent" 

The following command checks the latest version of package is installed.
 -> Ansible abc -m yum -a "name = demo-tomcat-1 state = latest" 

Gathering Facts
_______________

Facts can be used for implementing conditional statements in playbook. You can find adhoc information of all your facts through the following Ad-hoc command
 -> Ansible all -m setup 


------------------------------------------------------------------------------------------------------------------------------>
Now From Video

To check weather ansible install or not 

 -> ansible localhost -m ping

Go to this location /etc/ansible
and create one folder Playbooks

and create the one yaml file and write this

"---
- name: Installing the app
  hosts: localhost
  become: true

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install nginx
      apt:
        name: nginx
        state: present

    - name: Start and enable nginx
      service:
        name: nginx
        state: started
        enabled: yes"

---- To run Palybook use 
 -> ansible-playbook <file name> 

---- To check weather file having certain syntax issue use 
 -> ansible-playbok --syntax-check <file name>

---- To check that in host file we have added one ip that is there or not then use 
 -> ansible-inventory --list

---- To run any thing in remote machine use "hosts" file and add the remote machine ip and in playbook use "hosts" as "all" 
"---
- name: doing just localhost task
  hosts: all
  tasks:
  - name: just doing ping
    ping:
  - name: show output
    debug: msg="Hi Dipanshu"
"


~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
Ansible.txt[+] [unix] (05:29 01/01/1970)                                                                                                                                       7,5 All
-- INSERT --


